@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #efefef;
  --foreground: #000000;
}

@property --border-angle {
  inherits: false;
  initial-value: 0deg;
  syntax: "<angle>";
}

* {
  &::-webkit-scrollbar-track {
    border: 1px solid black;
    background-color: white;
  }

  &::-webkit-scrollbar {
    width: 10px;
    background-color: white;
  }

  &::-webkit-scrollbar-thumb {
    background-color: black;
  }
}

html {
  font-size: 16px;
}

body {
  color: var(--foreground);
  background: var(--background);
}

.markdown {
  font-size: 1.125rem;
  max-width: 840px;

  .katex-display {
    display: block;
    margin-top: 1em;
    margin-bottom: 1.5em;

    .katex-html {
      display: none;
    }
  }

  .code-block {
    margin-bottom: 64px;
    overflow: hidden;

    .code-block__content {
      position: relative;
      margin-bottom: 0px;
    }

    .code-block__title,
    .code-block__caption {
      margin-bottom: 0px;
      padding: 6px 10px;
      font-style: italic;
      border: 2px solid black;
    }

    .code-block__title {
      font-size: 1rem;
      font-weight: 400;
      text-align: right;
      border-bottom: none;
    }

    .code-block__caption {
      font-size: 0.8rem;
      font-weight: 600;
      text-align: left;
      border-top: none;
    }
  }

  pre {
    padding: 24px 10px;
    background: transparent !important;
    border: 2px solid black;
  }

  .shiki {
    overflow-x: auto;

    code {
      font-size: 1rem;
      font-family: "Fira Code", "Courier New", monospace !important;
    }

    &.has-focused {
      .line {
        &:not(.focused) {
          opacity: 0.7;
          filter: blur(0.095rem);
          transition:
            filter 0.35s,
            opacity 0.35s;
        }
      }

      &:hover {
        .line {
          &:not(.focused) {
            opacity: 1;
            filter: blur(0);
          }
        }
      }
    }

    .line {
      &.highlighted {
        background-color: rgba(255, 255, 255, 0.2);
      }

      &.diff {
        border: 1px solid black;
        padding: 0.1rem 0.2rem;

        &.add {
          span:first-child::before {
            content: "+";
            margin-right: 0.5rem;
            color: black;
            font-weight: bold;
          }
        }

        &.remove {
          span:first-child::before {
            content: "-";
            margin-right: 0.5rem;
            color: black;
            font-weight: bold;
          }
        }
      }
      span {
        &.highlighted {
          background-color: rgba(255, 255, 255, 0.2);
        }
        &.highlighted-word {
          background-color: rgba(255, 255, 255, 0.2);
        }
      }
    }
  }

  blockquote {
    margin-bottom: 2rem;
    p {
      margin-bottom: 0;
    }
    span {
      font-style: italic;
    }
  }

  h1,
  h2,
  h3,
  h4 {
    --optical-align: 2px;
    position: relative;
    margin-top: 1.5em;
    margin-bottom: 1em;
    scroll-margin-top: 7rem;
    font-weight: 700;

    &:first-of-type {
      margin-top: 0;
    }
  }

  h1 {
    font-size: calc(40 / 16 * 1rem);
  }

  h2 {
    font-size: calc(32 / 16 * 1rem);
  }

  h3 {
    font-size: calc(24 / 16 * 1rem);
  }

  p {
    line-height: 1.5;
    margin-bottom: 1.25em;
    overflow-wrap: break-word;

    /* inline code */
    & > code {
      display: inline;
      font-size: 0.9375em;
      font-style: normal;
      letter-spacing: -0.5px;
      padding: 2px 6px;
      margin: 1px;
      background: black;
      color: white;
      box-decoration-break: clone;
      font-family: "Fira Code", "Courier New", monospace;
    }
  }

  ol,
  ul {
    margin-bottom: 2rem;

    li + li {
      margin-top: 16px;
    }

    li > ul {
      margin-top: 16px;
    }
  }

  ol {
    list-style-type: decimal;
    padding-left: 1.5rem;
  }

  ul {
    list-style-type: disc;
    padding-left: 1.5rem;
  }

  a {
    font-weight: bold;

    &.wiki-link {
      text-decoration: unset;
      color: #000000;
      &:hover {
        text-decoration: underline;
      }
    }

    text-decoration: underline;
    text-underline-offset: 2px;
    &:hover {
      background: black;
      color: white;
    }
  }
}

/*animations*/
@property --border-angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0turn;
}

.flowing-border {
  position: relative;
  border: solid 8px transparent;
  --border-angle: 0.5turn;
  --main-bg: conic-gradient(
    from var(--border-angle),
    var(--background),
    var(--background),
    var(--background),
    var(--background)
  );
  --gradient-border: conic-gradient(
    from var(--border-angle),
    transparent 25%,
    black,
    black 99%,
    transparent
  );
  background:
    var(--main-bg) padding-box,
    var(--gradient-border) border-box,
    var(--main-bg) border-box;

  background-position: center center;
  animation: bg-spin 4s linear infinite;
  animation-play-state: paused;

  &:hover {
    animation-play-state: running;
  }
}

@keyframes bg-spin {
  0% {
    --border-angle: 0.5turn;
  }
  100% {
    --border-angle: 1.5turn;
  }
}
